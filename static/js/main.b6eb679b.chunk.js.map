{"version":3,"sources":["components/button/Button.js","components/calculadora/Calculadora.js","components/card/Card.js","components/cards/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","type","className","CalculoDeportes","asistenciasInput","asistenciasMesActualInput","asistencias","Number","asistenciasMesActual","dateTime","Date","day","getDate","month","getMonth","months","asistenciasFaltantes","cont","Object","keys","element","console","log","mesesSobrantes","length","asistenciasPosibles","isNaN","href","Card","title","body","space","Cards","info","id","xhr","XMLHttpRequest","open","responseType","send","App","useState","inputVal_1","setInputVal_1","inputVal_2","setInputVal_2","cardsInfo","onChange","event","target","value","outputCalculadora","setOutputCalculadora","cards","rel","resultado","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAceA,MAZf,YAEI,IADAC,EACD,EADCA,QAEA,OACI,8BACI,wBAAQC,KAAK,SAASC,UAAU,0BAA0BF,QAASA,EAAnE,yB,MC4IGG,MA/If,SAAyBC,EAAkBC,GAoBvC,IAlBA,IAAIC,EAAcC,OAAOH,GACrBI,EAAuBD,OAAOF,GAG5BI,EAAW,IAAIC,KACfC,EAAMF,EAASG,UACfC,EAAQJ,EAASK,WAAa,EAChCC,EAAS,CAAE,MAAS,GAAS,QAAW,GAAQ,MAAS,GAAQ,MAAS,GAAQ,KAAQ,GAAS,MAAS,GAAQ,MAAS,EAAQ,OAAU,GAAQ,WAAc,GAAQ,QAAW,GAAS,UAAa,GAAQ,UAAa,GAMnOC,EAHqB,GAGuBV,EAC5CW,EAAO,EAIX,MAAoBC,OAAOC,KAAKJ,GAAhC,eAAyC,CAApC,IAAIK,EAAO,KAIZ,GAHAC,QAAQC,IAAIT,GAGRA,EAAQI,EACRA,GAAQ,OAKP,GAAIA,IAASJ,EAgBAE,EAAOK,OAhBpB,CAID,GAHAH,IAGIF,EAAOK,GAAWT,EAAM,EACxB,SAIeI,EAAOK,GAAWT,GAW7C,IAAIY,EAAiBL,OAAOC,KAAKJ,GAAQS,OAASP,EAAO,EACrDQ,EAtCoB,EAsCGF,GAtCH,EAsC8Df,GAKtF,OAAIF,EAAc,IAAMA,EAAc,GAAKoB,MAAMpB,GAEzC,8BACI,8BACI,yCADJ,IACuB,uBADvB,4BAE6B,gDAF7B,kBAEqE,uDAFrE,8BASHE,EAAuB,GAAKA,EAAuB,GAAKkB,MAAMlB,GAE/D,8BACI,8BACI,yCADJ,IACuB,uBADvB,kCAEmC,yCAFnC,8BAEgF,4CAFhF,8BASHF,EAAcE,EAEf,8BACI,8BACI,yCADJ,IACuB,uBADvB,yBAE0B,uDAF1B,IAE2D,kDAF3D,8BAEiH,iDAOpHiB,GAAuBT,EAGC,IAAzBA,EAEI,8BACI,sDACmB,uBADnB,kDArFQ,IA8FXR,EAED,8BACI,+DACwB,uBADxB,eAEgB,iCAAOQ,EAAP,kBAFhB,0CAEmG,iCAAOS,EAAP,2BAFnG,8BAEmLF,EAFnL,mDAQJ,8BACI,+DACwB,uBADxB,eAEgB,iCAAOP,EAAP,kBAFhB,0CAEmG,iCAAOS,EAAP,2BAFnG,qCAE0LF,EAF1L,mDAYR,8BACI,uFACgD,uBADhD,eAEgB,iCAAOP,EAAP,kBAFhB,4CAEqG,iCAAOS,EAAP,2BAFrG,qCAE4LF,EAF5L,yBAEiO,uBAFjO,+BAGgC,mBAAGI,KAAK,6CAAR,oC,MC1HjCC,MAdf,YAAuC,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACzB,OACI,qBAAK7B,UAAU,OAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,aAAf,SAA6B2B,IAC7B,sBAAK3B,UAAU,YAAf,UACK4B,EACAC,W,MCONC,MAbf,YAA0B,IAATC,EAAQ,EAARA,KACb,OACI,sBAAK/B,UAAU,0CAAf,UACI,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,CAAM2B,MAAOI,EAAK,GAAGJ,MAAOC,KAAMG,EAAK,GAAGH,QADpBG,EAAK,GAAGC,IAGlC,qBAAKhC,UAAU,MAAf,SACI,cAAC,EAAD,CAAM2B,MAAOI,EAAK,GAAGJ,MAAOC,KAAMG,EAAK,GAAGH,QADpBG,EAAK,GAAGC,QCF1CC,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAO,gGAChBhB,QAAQC,IAAI,UAAWa,GACvBA,EAAIG,aAAe,OACnBH,EAAII,OAmFWC,MAjFf,WAAgB,IAAD,EAEuBC,qBAFvB,mBAENC,EAFM,KAEMC,EAFN,OAGuBF,qBAHvB,mBAGNG,EAHM,KAGMC,EAHN,KAKPC,EAAY,CAChB,CACEZ,GAAI,EACJL,MAAO,sFACPC,KACE,8BACE,uBAAO7B,KAAK,SAASC,UAAU,OAAO6C,SAAU,SAAAC,GAAK,OAAIL,EAAcK,EAAMC,OAAOC,aAI1F,CACEhB,GAAI,EACJL,MAAO,sFACPC,KACE,8BACE,uBAAO7B,KAAK,SAASC,UAAU,YAAY6C,SAAU,SAAAC,GAAK,OAAIH,EAAcG,EAAMC,OAAOC,cApBpF,EAyBqCT,qBAzBrC,mBAyBNU,EAzBM,KAyBaC,EAzBb,KAsCPC,EAAQ,CACZ,CACEnB,GAAI,EACJL,MAAO,2CACPC,KAAMqB,GAER,CACEjB,GAAI,EACJL,MAAO,iEACPC,KAAM,iMAAgK,mBAAGH,KAAK,6DAA6DsB,OAAO,SAASK,IAAI,sBAAzF,8BAAhK,SAIV,OACE,sBAAKpD,UAAU,MAAf,UACE,iCACE,2EAFJ,IAKE,gCACE,qBAAKA,UAAU,4BAAf,SACE,cAAC,EAAD,CAAM2B,MAAOwB,EAAM,GAAGxB,MAAOC,KAAMuB,EAAM,GAAGvB,SAE9C,qBAAK5B,UAAU,cAAf,SACE,cAAC,EAAD,CAAO+B,KAAMa,MAEf,qBAAK5C,UAAU,sCAAf,SACE,cAAC,EAAD,CAAQF,QAAS,YAtCT,WACdoD,EAAqBjD,EAAgBuC,EAAYE,IAGjD,IAAIT,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAO,8FAChBhB,QAAQC,IAAI,QAASa,GACrBA,EAAIG,aAAe,OACnBH,EAAII,OA8B2BgB,IAAzB,wBAEF,qBAAKrD,UAAU,4BAAf,SACE,cAAC,EAAD,CAAM2B,MAAOwB,EAAM,GAAGxB,MAAOC,KAAMuB,EAAM,GAAGvB,SAE9C,8BACE,qGACqE,4DAAiB,uBACpF,mBAAGH,KAAK,qCAAqCsB,OAAO,SAASK,IAAI,sBAAjE,kCC3EGE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b6eb679b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Button ({\r\n    onClick\r\n}) {\r\n    return (\r\n        <div>\r\n            <button type=\"button\" className=\"btn btn-outline-success\" onClick={onClick}>\r\n                Calcular\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button","import \"./Calculadora.css\"\r\n\r\n// Calculadora de asistencias de Deporte\r\n\r\nfunction CalculoDeportes(asistenciasInput, asistenciasMesActualInput) {\r\n    // Datos del usuario, input en la pagina\r\n    var asistencias = Number(asistenciasInput);\r\n    var asistenciasMesActual = Number(asistenciasMesActualInput);\r\n\r\n    // Fechas\r\n    const dateTime = new Date()\r\n    const day = dateTime.getDate();     // Hay un problema que se habla mas adelante, cuando el numero del dia es \"muy alto\"\r\n    const month = dateTime.getMonth() + 1;      // datetime.datetime.now().month;\r\n    var months = { \"enero\": 31 - 10, \"febrero\": 28 - 8, \"marzo\": 31 - 8, \"abril\": 30 - 8, \"mayo\": 31 - 10, \"junio\": 30 - 8, \"julio\": 13 - 4, \"agosto\": 31 - 8, \"septiembre\": 30 - 8, \"octubre\": 31 - 10, \"noviembre\": 30 - 8, \"diciembre\": 10 - 2 };    // Las restas son los fin de semana (que no cuentan como dia para tomar ramos de deporte)\r\n\r\n    // Requisitos deportes\r\n    var asistenciasTotales = 26;\r\n    var asistenciasMaxMes = 8;\r\n\r\n    var asistenciasFaltantes = asistenciasTotales - asistencias;\r\n    var cont = 1;\r\n    var dias = 0;\r\n\r\n\r\n    for (let element of Object.keys(months)) {\r\n        console.log(month)\r\n\r\n        // Para llegar al mes que corresponde\r\n        if (month > cont) {\r\n            cont += 1;\r\n            continue;\r\n        }\r\n\r\n        // Restarle los dias del mes que ya llevamos\r\n        else if (cont === month) {\r\n            cont++;\r\n\r\n            // Si esta resta da negativa, significa que quedan muy pocos dias habiles en ese mes (pero como no puedo poner que dias son los fin de semana, y por tanto los resto de months... qda el cague) y mejor asumir que qdan 0 dias habiles ese mes\r\n            if (months[element] - day < 0) {\r\n                continue;\r\n            }\r\n\r\n            else {\r\n                dias = dias + (months[element] - day);\r\n                continue;\r\n            };\r\n        }\r\n\r\n        // Se suman los dias de los meses que quedan\r\n        else {\r\n            dias = dias + months[element];\r\n        }\r\n    };\r\n\r\n    var mesesSobrantes = Object.keys(months).length - cont + 1;\r\n    var asistenciasPosibles = (mesesSobrantes * asistenciasMaxMes) + (asistenciasMaxMes - asistenciasMesActual);   // La cantidad de asistencias maximas que puedes hacer tomando en cuenta que solo se contabilizan 8 asistencias al mes\r\n\r\n    // Posibles output's\r\n\r\n    // ERROR Input fuera de rango\r\n    if (asistencias > 26 || asistencias < 0 || isNaN(asistencias)) {\r\n        return (\r\n            <div>\r\n                <p>\r\n                    <span>ERROR</span> <br></br>\r\n                    Debes ingresar un numero <span>entre 0 y 26</span> en la caja de <span>asistencias totales</span> (lee los requisitos).\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // ERROR Input fuera de rango\r\n    else if (asistenciasMesActual > 8 || asistenciasMesActual < 0 || isNaN(asistenciasMesActual)) {\r\n        return (\r\n            <div>\r\n                <p>\r\n                    <span>ERROR</span> <br></br>\r\n                    Debes ingresar un numero entre <span>0 y 8</span> en la caja de asistencias <span>este mes</span> (lee los requisitos).\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // ERROR Input asist mes es mayor a Input asit\r\n    else if (asistencias < asistenciasMesActual) {\r\n        return (\r\n            <div>\r\n                <p>\r\n                    <span>ERROR</span> <br></br>\r\n                    Revisa tus datos, tus <span>asistencias totales</span> <span>debe ser mayor</span> o igual a tus asistencias <span>este mes</span>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // DE PANA\r\n    else if (asistenciasPosibles >= asistenciasFaltantes) {\r\n\r\n        // ya completo todas las asistencias\r\n        if (asistenciasFaltantes === 0) {\r\n            return (\r\n                <div>\r\n                    <p>\r\n                        ¬°¬°FELICIDADES!!<br></br>\r\n                        Ya pasate el ramo üí™üèΩ\r\n                    </p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // Si lleva 8 asistencias este mes, entonces no puede hacer mas asistencias este mes\r\n        else if (asistenciasMesActual === asistenciasMaxMes) {\r\n            return (\r\n                <div>\r\n                    <p>\r\n                        Aun tienes tiempo üòÖ<br></br>\r\n                        Debes tomar <span>{asistenciasFaltantes} asistencias</span>, y seg√∫n los requisitos, te quedan <span>{asistenciasPosibles} posibles asistencias</span> dentro de los pr√≥ximos {mesesSobrantes} meses que quedan para poder pasar el ramo.\r\n                    </p>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <p>\r\n                        Aun tienes tiempo üòÖ<br></br>\r\n                        Debes tomar <span>{asistenciasFaltantes} asistencias</span>, y seg√∫n los requisitos, te quedan <span>{asistenciasPosibles} posibles asistencias</span> dentro de este y los pr√≥ximos {mesesSobrantes} meses que quedan para poder pasar el ramo.\r\n                    </p>\r\n                </div>\r\n            );\r\n        };\r\n    }\r\n\r\n    // Efe en el chat\r\n    else {\r\n        return (\r\n            <div>\r\n                <p>\r\n                    Lamento informarte que estas en problemas üò¨<br></br>\r\n                    Debes tomar <span>{asistenciasFaltantes} asistencias</span>, y seg√∫n los requisitos, solo quedan <span>{asistenciasPosibles} posibles asistencias</span> dentro de este y los pr√≥ximos {mesesSobrantes} meses... F en el chat<br></br>\r\n                    Partiste a enviarle un dm a <a href=\"https://www.instagram.com/uai_deportestgo/\">@uai_deportestgo</a>\r\n                </p>\r\n            </div>\r\n        );\r\n    };\r\n\r\n};\r\n\r\nexport default CalculoDeportes;","import React from 'react'\r\nimport './Card.css'\r\n\r\nfunction Card({ title, body, space }) {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-body text-center\">\r\n                <div className=\"card-title\">{title}</div>\r\n                <div className=\"card-text\">\r\n                    {body}\r\n                    {space}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React     from 'react'\r\nimport Card from '../card/Card.js'\r\nimport './Cards.css'\r\n\r\nfunction Cards({ info }) {\r\n    return (\r\n        <div className=\"container d-flex justify-content-center\">\r\n            <div className=\"col\" key={info[0].id}>\r\n                <Card title={info[0].title} body={info[0].body} />\r\n            </div>\r\n            <div className=\"col\" key={info[1].id}>\r\n                <Card title={info[1].title} body={info[1].body} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState } from \"react\";\r\nimport './App.css';\r\nimport Button from './components/button/Button.js'\r\nimport CalculoDeportes from \"./components/calculadora/Calculadora\";\r\nimport Card from \"./components/card/Card.js\";\r\nimport Cards from \"./components/cards/Cards.js\"\r\n\r\n// agruega 1 al contador de visitas\r\nvar xhr = new XMLHttpRequest();\r\nxhr.open(\"GET\", \"https://api.countapi.xyz/hit/satelerd.github.ioCalculadora-de-Asistencia-Deporte-UAI/visitas\");\r\nconsole.log(\"visitas\", xhr)\r\nxhr.responseType = \"json\";\r\nxhr.send();\r\n\r\nfunction App() {\r\n\r\n  const [inputVal_1, setInputVal_1] = useState();\r\n  const [inputVal_2, setInputVal_2] = useState();\r\n\r\n  const cardsInfo = [\r\n    {\r\n      id: 1,\r\n      title: <h5>¬øCuantas asistencias de deportes llevas en total?</h5>,\r\n      body: (\r\n        <div>\r\n          <input type=\"number\" className=\"w-50\" onChange={event => setInputVal_1(event.target.value)} />\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      id: 2,\r\n      title: <h5>¬øCuantas asistencias de deportes llevas este mes?</h5>,\r\n      body: (\r\n        <div>\r\n          <input type=\"number\" className=\"w-50 mt-6\" onChange={event => setInputVal_2(event.target.value)} />\r\n        </div>\r\n      )\r\n    }];\r\n\r\n  const [outputCalculadora, setOutputCalculadora] = useState();\r\n\r\n  var resultado = () => {\r\n    setOutputCalculadora(CalculoDeportes(inputVal_1, inputVal_2));\r\n\r\n    // Agruega 1 al contador del boton\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"GET\", \"https://api.countapi.xyz/hit/satelerd.github.ioCalculadora-de-Asistencia-Deporte-UAI/boton\");\r\n    console.log(\"Boton\", xhr)\r\n    xhr.responseType = \"json\";\r\n    xhr.send();\r\n  }\r\n\r\n  const cards = [\r\n    {\r\n      id: 1,\r\n      title: <h4>Resultado</h4>,\r\n      body: outputCalculadora\r\n    },\r\n    {\r\n      id: 2,\r\n      title: <h4>Requisitos para aprobar deporte</h4>,\r\n      body: <div>Para aprobar se necesitan cumplir con 26 asistencias, contabilizando solo 1 asistencia diaria y 8 asistencias por mes. Puedes encontrar mas informaci√≥n en <a href='https://instagram.com/uai_deportestgo?utm_medium=copy_link' target=\"_blank\" rel=\"noopener noreferrer\">@uai_deportestgo</a>.</div>\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Calculadora de Asistencias Deportes UAI</h1>\r\n      </header>s\r\n\r\n      <div>\r\n        <div className=\"requisitos-card container\">\r\n          <Card title={cards[1].title} body={cards[1].body} />\r\n        </div>\r\n        <div className=\"input-cards\">\r\n          <Cards info={cardsInfo} />\r\n        </div>\r\n        <div className=\"boton d-flex justify-content-center\">\r\n          <Button onClick={() => { resultado() }}>Calcular</Button>\r\n        </div>\r\n        <div className=\"resultados-card container\">\r\n          <Card title={cards[0].title} body={cards[0].body} />\r\n        </div>\r\n        <div>\r\n          <h6>\r\n            Si tienes dudas/ideas o encuentras un error me puedes enviar un dm <span>üôåüèº</span><br></br>\r\n            <a href=\"https://www.instagram.com/sateler/\" target=\"_blank\" rel=\"noopener noreferrer\">@sateler</a>\r\n          </h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}