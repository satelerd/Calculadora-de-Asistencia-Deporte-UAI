{"version":3,"sources":["components/button/Button.js","components/calculadora/Calculadora.js","components/card/Card.js","components/input/Input.js","components/cards/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","type","class","CalculoDeportes","asistenciasInput","asistenciasMesActualInput","asistencias","asistenciasMesActual","dateTime","Date","day","getDate","month","getMonth","months","asistenciasFaltantes","cont","dias","Object","keys","element","asistenciasPosibles","length","Card","title","body","space","className","Input","onChange","useState","number","setNumber","event","target","value","console","log","Cards","setAsistencias","cards","id","resultado","textoResultado","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.892fdd10.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Button ({\r\n    onClick\r\n}) {\r\n    return (\r\n        <div>\r\n            <button type=\"button\" class=\"btn btn-outline-success\" onClick={onClick}>\r\n                Calcular\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button","// Calculadora de asistencias de Deporte\r\n\r\nfunction CalculoDeportes(asistenciasInput, asistenciasMesActualInput) {\r\n    // Datos del usuario, input en la pagina\r\n    var asistencias = asistenciasInput;\r\n    var asistenciasMesActual = asistenciasMesActualInput;\r\n\r\n    // Fechas\r\n    const dateTime = new Date()\r\n    const day = dateTime.getDate();     // Hay un problema que se habla mas adelante, cuando el numero del dia es \"muy alto\"\r\n    const month = dateTime.getMonth() + 1;      // datetime.datetime.now().month;\r\n    var months = {\"enero\": 31 - 10, \"febrero\": 28 - 8, \"marzo\": 31 - 8, \"abril\": 30 - 8, \"mayo\": 31 - 10, \"junio\": 30 - 8, \"julio\": 13 - 4};    // Las restas son los fin de semana (que no cuentan como dia para tomar ramos de deporte)\r\n    \r\n    // Requisitos deportes\r\n    var asistenciasTotales = 26;\r\n    var asistenciasMaxMes = 8;\r\n\r\n    var asistenciasFaltantes = asistenciasTotales - asistencias;\r\n    var cont = 1;\r\n    var dias = 0;\r\n\r\n    \r\n    for (let element of Object.keys(months)) {\r\n\r\n        // Para llegar al mes que corresponde\r\n        if (month > cont) {\r\n            cont += 1;\r\n            continue;\r\n        }\r\n\r\n        // Restarle los dias del mes que ya llevamos\r\n        else if (cont === month) { \r\n            cont++;\r\n\r\n            // Si esta resta da negativa, significa que quedan muy pocos dias habiles en ese mes (pero como no puedo poner que dias son los fin de semana, y por tanto los resto de months... qda el cague) y mejor asumir que qdan 0 dias habiles ese mes\r\n            if (months[element] - day < 0) {\r\n                continue;\r\n            }\r\n\r\n            else {\r\n                dias = dias + (months[element] - day);\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // Se suman los dias de los meses que quedan\r\n        else {\r\n            dias = dias + months[element];\r\n        }\r\n    };\r\n\r\n    var mesesSobrantes = Object.keys(months).length - cont + 1;\r\n    var asistenciasPosibles = (mesesSobrantes * asistenciasMaxMes) + (asistenciasMaxMes - asistenciasMesActual)   // La cantidad de asistencias maximas que puedes hacer tomando en cuenta que solo se contabilizan 8 asistencias al mes\r\n\r\n    // Posibles output's\r\n    \r\n    // Tamo de pana\r\n    if (asistenciasPosibles >= asistenciasFaltantes) {\r\n        return (\"Te quedan \" + dias + \" días hábiles del semestre de deporte, para tomar \" + asistenciasFaltantes + \" asistencias... Pero dado que solo cuentan 8 asistencias al mes, tienes \" + asistenciasPosibles + \" asistencias posibles en los \" + dias + \" días que te quedan.\")\r\n    }\r\n\r\n    // Efe en el chat\r\n    else {\r\n        return (\"Lamento informarte que estas pa la cagada... Necesitas hacer \" + asistenciasFaltantes + \" asistencias en tan solo \" + asistenciasPosibles + \" asistencias posibles :(\")\r\n    }\r\n\r\n}\r\n\r\nexport default CalculoDeportes","import React from 'react'\r\nimport './Card.css'\r\n\r\nfunction Card({title, body, space}) {\r\n    return (\r\n        <div className=\"card border-dark shadow\">\r\n            <div className=\"card-body text-center\">\r\n                <h4 className=\"card-title\">{title}</h4>\r\n                <p className=\"card-text\">\r\n                    {body}\r\n                    {space}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React,  { useState } from \"react\";\r\nimport './Input.css'\r\n\r\n\r\n\r\nfunction Input({onChange}) {\r\n    var [number, setNumber] = useState(0)\r\n    return (\r\n        <div>\r\n            <input type=\"number\" className=\"w-50\" onChange={event => {\r\n                setNumber(event.target.value)\r\n                console.log(number)\r\n                }}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React,  { useState } from 'react'\r\nimport Card from '../card/Card.js'\r\nimport Input from '../input/Input.js'\r\nimport './Cards.css'\r\n\r\nfunction Cards() {\r\n    var [asistencias, setAsistencias] = useState(0)\r\n    \r\n    const cards = [\r\n    {\r\n        id: 1,\r\n        title: <h5>¿Cuantas asistencias de deportes llevas este semestre?</h5>,\r\n        body: <Input onChange={event => {\r\n            setAsistencias(event.target.value)\r\n            console.log(asistencias)\r\n        }} /> // como saco el valor de number desde input hacia aca?\r\n    },\r\n    {\r\n        id: 2,\r\n        title: <h5>¿Cuantas asistencias de deportes llevas este mes?</h5>,\r\n        body: <Input/>\r\n    }\r\n]\r\n    return (\r\n        <div className=\"container d-flex justify-content-center\">\r\n            <div className=\"col\" key={cards[0].id}>\r\n                <Card title={cards[0].title} body={cards[0].body} />\r\n            </div>\r\n            <div className=\"col\" key={cards[1].id}>\r\n                <Card title={cards[1].title} body={cards[1].body} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","import React from \"react\";\nimport './App.css';\nimport Button from './components/button/Button.js'\nimport CalculoDeportes from \"./components/calculadora/Calculadora\";\nimport Card from \"./components/card/Card.js\";\nimport Cards from \"./components/cards/Cards.js\"\n\n\n\nvar resultado = () => {\n  var textoResultado = CalculoDeportes(6,8);\n  console.log(textoResultado)\n  return textoResultado\n}\n\nconst cards = [\n  {\n      id: 1,\n      title: \"Resultado\",\n      body: resultado()\n  },\n  {\n      id: 2,\n      title: \"Requisitos para aprobar deporte\",\n      body: \"Debes tener un mínimo de 26 asistencias en todo el semestre, contabilizando un máximo de 8 asistencias por mes y 1 al día.\"\n  }\n]\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Calculadora de Asistencias Deportes UAI</h1>\n      </header>\n      <body>\n        <div>\n          <div className=\"requisitos-card container\">\n            <Card title={cards[1].title} body={cards[1].body} />\n          </div>\n          <div className=\"input-cards\">\n            <Cards/>\n          </div>\n          <div className=\"boton d-flex justify-content-center\">\n            <Button onClick={() => {resultado()}}>Calcular</Button>\n          </div>\n          <div className=\"resultados-card container\">\n            <Card title={cards[0].title} body={cards[0].body} />\n          </div>\n          \n        </div>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}