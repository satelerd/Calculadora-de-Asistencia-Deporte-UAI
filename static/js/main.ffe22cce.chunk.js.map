{"version":3,"sources":["components/button/Button.js","components/calculadora/Calculadora.js","components/card/Card.js","components/cards/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","type","className","CalculoDeportes","asistenciasInput","asistenciasMesActualInput","asistencias","asistenciasMesActual","dateTime","Date","day","getDate","month","getMonth","months","asistenciasFaltantes","cont","Object","keys","element","mesesSobrantes","length","asistenciasPosibles","Card","title","body","space","Cards","info","id","App","useState","inputVal_1","setInputVal_1","inputVal_2","setInputVal_2","cardsInfo","onChange","event","target","value","outputCalculadora","setOutputCalculadora","cards","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffe22cce.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Button ({\r\n    onClick\r\n}) {\r\n    return (\r\n        <div>\r\n            <button type=\"button\" className=\"btn btn-outline-success\" onClick={onClick}>\r\n                Calcular\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button","import \"./Calculadora.css\"\r\n\r\n// Calculadora de asistencias de Deporte\r\n\r\nfunction CalculoDeportes(asistenciasInput, asistenciasMesActualInput) {\r\n    // Datos del usuario, input en la pagina\r\n    var asistencias = asistenciasInput;\r\n    var asistenciasMesActual = asistenciasMesActualInput;\r\n\r\n    // Fechas\r\n    const dateTime = new Date()\r\n    const day = dateTime.getDate();     // Hay un problema que se habla mas adelante, cuando el numero del dia es \"muy alto\"\r\n    const month = dateTime.getMonth() + 1;      // datetime.datetime.now().month;\r\n    var months = {\"enero\": 31 - 10, \"febrero\": 28 - 8, \"marzo\": 31 - 8, \"abril\": 30 - 8, \"mayo\": 31 - 10, \"junio\": 30 - 8, \"julio\": 13 - 4};    // Las restas son los fin de semana (que no cuentan como dia para tomar ramos de deporte)\r\n    \r\n    // Requisitos deportes\r\n    var asistenciasTotales = 26;\r\n    var asistenciasMaxMes = 8;\r\n\r\n    var asistenciasFaltantes = asistenciasTotales - asistencias;\r\n    var cont = 1;\r\n    var dias = 0;\r\n\r\n    \r\n    for (let element of Object.keys(months)) {\r\n\r\n        // Para llegar al mes que corresponde\r\n        if (month > cont) {\r\n            cont += 1;\r\n            continue;\r\n        }\r\n\r\n        // Restarle los dias del mes que ya llevamos\r\n        else if (cont === month) { \r\n            cont++;\r\n\r\n            // Si esta resta da negativa, significa que quedan muy pocos dias habiles en ese mes (pero como no puedo poner que dias son los fin de semana, y por tanto los resto de months... qda el cague) y mejor asumir que qdan 0 dias habiles ese mes\r\n            if (months[element] - day < 0) {\r\n                continue;\r\n            }\r\n\r\n            else {\r\n                dias = dias + (months[element] - day);\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // Se suman los dias de los meses que quedan\r\n        else {\r\n            dias = dias + months[element];\r\n        }\r\n    };\r\n\r\n    var mesesSobrantes = Object.keys(months).length - cont + 1;\r\n    var asistenciasPosibles = (mesesSobrantes * asistenciasMaxMes) + (asistenciasMaxMes - asistenciasMesActual)   // La cantidad de asistencias maximas que puedes hacer tomando en cuenta que solo se contabilizan 8 asistencias al mes\r\n\r\n    // Posibles output's\r\n    \r\n    // Tamo de pana\r\n    if (asistenciasPosibles >= asistenciasFaltantes) {\r\n        return (\r\n            <div>\r\n                <p>\r\n                    Aun tienes tiempo ðŸ˜… <br></br>\r\n                    Debes tomar <span>{asistenciasFaltantes} asistencias</span>, y segÃºn los requisitos, te quedan <span>{asistenciasPosibles} posibles asistencias</span> dentro de este y los prÃ³ximos {mesesSobrantes} meses que quedan para poder pasar el ramo.\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Efe en el chat\r\n    else {\r\n        return (\"Lamento informarte que estas pa la cagada... Necesitas hacer \" + asistenciasFaltantes + \" asistencias en tan solo \" + asistenciasPosibles + \" asistencias posibles :(\")\r\n    }\r\n\r\n}\r\n\r\nexport default CalculoDeportes","import React from 'react'\r\nimport './Card.css'\r\n\r\nfunction Card({title, body, space}) {\r\n    return (\r\n        <div className=\"card border-dark shadow\">\r\n            <div className=\"card-body text-center\">\r\n                <div className=\"card-title\">{title}</div>\r\n                <div className=\"card-text\">\r\n                    {body}\r\n                    {space}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React     from 'react'\r\nimport Card from '../card/Card.js'\r\nimport './Cards.css'\r\n\r\nfunction Cards({ info }) {\r\n\r\n    return (\r\n        <div className=\"container d-flex justify-content-center\">\r\n            <div className=\"col\" key={info[0].id}>\r\n                <Card title={info[0].title} body={info[0].body} />\r\n            </div>\r\n            <div className=\"col\" key={info[1].id}>\r\n                <Card title={info[1].title} body={info[1].body} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState } from \"react\";\nimport './App.css';\nimport Button from './components/button/Button.js'\nimport CalculoDeportes from \"./components/calculadora/Calculadora\";\nimport Card from \"./components/card/Card.js\";\nimport Cards from \"./components/cards/Cards.js\"\n\nfunction App() {\n  \n  const [inputVal_1, setInputVal_1] = useState(0);\n  const [inputVal_2, setInputVal_2] = useState(0);\n\n  const cardsInfo = [\n    {\n        id: 1,\n        title: <h5>Â¿Cuantas asistencias de deportes llevas este semestre?</h5>,\n        body: (\n          <div>\n              <input type=\"number\" className=\"w-50\" onChange={ event => setInputVal_1(event.target.value) } />\n          </div>\n      )\n    },\n    {\n        id: 2,\n        title: <h5>Â¿Cuantas asistencias de deportes llevas este mes?</h5>,\n        body: (\n          <div>\n              <input type=\"number\" className=\"w-50\" onChange={ event => setInputVal_2(event.target.value) } />\n          </div>\n      )\n    }];\n\n    const [outputCalculadora, setOutputCalculadora] = useState();\n\n    var resultado = () => {\n      setOutputCalculadora(CalculoDeportes(inputVal_1, inputVal_2));\n    }\n    \n    const cards = [\n      {\n          id: 1,\n          title: <h4>Resultado</h4>,\n          body: outputCalculadora\n      },\n      {\n          id: 2,\n          title: <h4>Requisitos para aprobar deporte</h4>,\n          body: \"Para aprovar deportes se necesitan cumplir con 26 asistencias, contabilizando solo 1 asistencia diaria y 8 asistencias por mes. El plazo para cumplir las asistencias es hasta el 13 de julio.\"\n      }\n    ]\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Calculadora de Asistencias Deportes UAI</h1>\n      </header>\n\n      <div>\n        <div className=\"requisitos-card container\">\n          <Card title={cards[1].title} body={cards[1].body} />\n        </div>\n        <div className=\"input-cards\">\n          <Cards info={cardsInfo} />\n        </div>\n        <div className=\"boton d-flex justify-content-center\">\n          <Button onClick={() => {resultado()}}>Calcular</Button>\n        </div>\n        <div className=\"resultados-card container\">\n          <Card title={cards[0].title} body={cards[0].body} />\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}